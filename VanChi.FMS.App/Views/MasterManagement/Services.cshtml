@{
    ViewBag.Title = "DialogTemplateEdit";
}

@using Syncfusion.EJ2

@section ControlsSection{
<div class="control-section">
    @Html.EJS().Grid("DialogTemplateEdit").DataSource(ds => ds.Url(@Url.Action("ServicesDatasource", "MasterManagement")).UpdateUrl(@Url.Action("Update", "MasterManagement")).Adaptor("UrlAdaptor")).AllowSorting().ActionComplete("actionComplete").Columns(col =>
{
    col.Field("OrderID").HeaderText("Order ID").IsPrimaryKey(true).Width("120").ValidationRules(new { required = true, number = true }).TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
    col.Field("CustomerID").HeaderText("Customer Name").Width("150").ValidationRules(new { required = true, minLength = 3 }).Add();
    col.Field("Freight").HeaderText("Freight").Width("120").EditType("numericedit").Format("C2").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Right).Add();
    col.Field("OrderDate").HeaderText("Order Date").EditType("datepickeredit").Format("yMd").Width("150").Add();
    col.Field("ShipCountry").HeaderText("Ship Country").EditType("dropdownedit").Width("150").Add();
}).AllowPaging().PageSettings(page => page.EnableQueryString(true)).EditSettings(edit => { edit.AllowAdding(true).AllowEditing(true).AllowDeleting(true).Mode(Syncfusion.EJ2.Grids.EditMode.Dialog).Template("#dialogtemplate"); }).Toolbar(new List<string>() { "Add", "Edit", "Delete", "Search" }).Render()
</div>

    <script>
        function complete(args) {
            if (args.requestType == "save") {
                //Your dialog model to display the message after successful insert and edit actions 
            }
        } 
        function actionComplete(args) {
            if (args.requestType === 'beginEdit' || args.requestType === 'add') {
                let spinner = ej.popups.createSpinner({ target: args.dialog.element });
                ej.popups.showSpinner(args.dialog.element);
                if (args.requestType === 'beginEdit') {
                    var ajax = new ej.base.Ajax({
                        url: "@Url.Action("Editpartial", "MasterManagement")", //render the partial view
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify({ value: args.rowData })
                    });
                    ajax.send().then(function (data) {
                        $("#dialogTemp").html(data); //Render the edit form with selected record
                        args.form.elements.namedItem('CustomerID').focus();
                        ej.popups.hideSpinner(args.dialog.element);
                    }).catch(function (xhr) {
                        console.log(xhr);
                        ej.popups.hideSpinner(args.dialog.element);
                    });
                }
                if (args.requestType === 'add') {
                    var ajax = new ej.base.Ajax({
                        url: "@Url.Action("Addpartial", "MasterManagement")", //render the partial view
                        type: "POST",
                        contentType: "application/json",
                    });
                    ajax.send().then(function (data) {
                        $("#dialogTemp").html(data); //Render the edit form with selected record
                        args.form.elements.namedItem('OrderID').focus();
                        ej.popups.hideSpinner(args.dialog.element);
                    }).catch(function (xhr) {
                        console.log(xhr);
                        ej.popups.hideSpinner(args.dialog.element);
                    });
                }
                if (args.requestType === 'update') {
                    alert("update");
                }
            }
        }
    </script>

    <style>
        .form-group.col-md-6 {
            width: 250px;
        }

        #ShipAddress {
            resize: vertical;
        }

        :-ms-fullscreen, .e-dialog {
            max-width: 552px;
        }

        @@media only screen and (max-width: 991px) {
            .e-dialog.e-control.e-popup {
                min-width: 300px !important;
            }
        }

        @@media only screen and (min-width: 992px) {
            .e-dialog.e-control.e-popup {
                min-width: 550px !important;
                min-height: 415px;
            }

            .e-bigger.e-dialog.e-control.e-popup,
            .e-bigger .e-dialog.e-control.e-popup {
                min-height: 496px;
            }
        }
    </style>

    <script id='dialogtemplate' type="text/x-template">
        <div id="dialogTemp">
        </div>
    </script>
}
@*@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates CRUD operations in Grid with Dialog Template. You can perform CRUD operations as follows,</p>
        <ul>
            <li><code>Add</code> -  To add new record, click Add toolbar button </li>
            <li><code>Edit</code> - To edit record, double click a row or click toolbar Edit button after selected a row </li>
            <li><code>Delete</code> - To delete record, click toolbar Delete button after selected a row </li>
            <li><code>Update</code>,<code>Cancel</code> - You can save or discard changes by click toolbar Update and Cancel button respectively</li>
        </ul>
    </div>
}*@

@*@section Meta{
    <meta name="description" content="This demo for Essential JS 2 grid control shows how to edit the grid rows using Essential JS 2 dialog-template." />
}*@

@*@section Description{
    <div id="description">
        <p>
            The Grid supports CRUD operations. This CRUD operations can be configured in Grid using
            <code> editSettings </code>.
        </p>
        <p>
            In this demo, Dialog template is enabled for editing by defining <code>
                editSettings.mode
            </code> as <code>Dialog</code> and <code>
                editSettings.template
            </code> as SCRIPT element`s ID which holds the template. You can start editing by double clicking a row or clicking on toolbar's <code> Edit </code>
            button, then the currently selected row will be shown on a dialog with custom elements and you can change the row values and save edited data to the datasource.
        </p>
    </div>
}*@
